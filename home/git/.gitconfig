[init]
  defaultBranch = main

[pager]
	diff = less -SF
	show = less -SF
	status = less -FX
	log = less -FX
	branch = less -FX

[pretty]
	customlog = tformat:%C(auto)%h %<(12,trunc)%C(cyan)%an%C(reset)%C(green)%d%C(auto) %s %C(brightblack)(%ar)

[rebase]
  instructionFormat = "tformat:%<(8,trunc)%an%d %s # %ar"
  stat = true
  autoSquash = true

[advice]
  detachedHead = false

[merge]
  conflictStyle = diff3

[diff]
  algorithm = histogram
  mnemonicPrefix = true

[push]
  autoSetupRemote = true

[fetch]
  all = true

[pull]
  ff = only

[commit]
  verbose = true

[branch]
  sort = -committerdate

[alias]
  k = checkout
  b = "!f() { : git branch; git branch -vv --sort=-committerdate --no-merge MAIN --list --format=\"%(if)%(HEAD)%(then)%(color:reverse)%(end)%(color:cyan)%(align:32,left)%(refname:short)%(end)%(color:default) %(color:green)%(align:12)%(committerdate:relative)%(end)%(color:default) %(subject) %(color:brightblack)(%(authorname)) %(upstream:remotename)%(color:default)%(if)%(upstream:track)%(then) %(color:yellow)%(upstream:track)%(end)\"; }; f"
  d = diff --stat --summary -p
  ds = diff --stat --summary -p --staged
  l = "!f() { : git log; if [ $# -eq 0 ]; then set -- \"-n15\"; fi; git customlog \"$@\"; }; f"
  t = status --short -b -u
  a = "!f() { : git add --all; git add --all \"$@\" && git t; }; f"
  u = "!f() { : git add -u; git add -u \"$@\" && git t; }; f"
  r = "!f() { : git reset; git reset -- HEAD -q \"$@\" && git t; }; f"
  c = "!f() { if [[ $# -eq 0 ]]; then git commit -v; else git commit -m \"$*\"; fi; }; f"
  p = push
  # git rev-parse --abbrev-ref --symbolic-full-name @{u}
  pl = "!f () { : git pull; git pull --stat -v --ff-only --set-upstream \"$@\"; }; f"
  amend = commit --amend --no-edit
  kpr = "!f() { git fpr \"$1\" && git checkout \"pr/$1\" && git l; }; f"
  ll = customlog --all
  sh = show --summary --stat -p --format=fuller
  customlog = log --decorate --graph --format=customlog
  fpr = "!f() { git checkout --detach HEAD; git fetch -f `git get-upstream` \"pull/$1/head:pr/$1\"; }; f"
  pu = "!f() { : git push; git push -u \"${1:-origin}\" \"${2:-@}\"; }; f"
  web = "!f() { : git push; U=`git get-upstream \"$1\"` && xdg-open \"$U\"; }; f"
  get-upstream = "!f() { git remote get-url ${1:-up} 2>/dev/null || git remote get-url origin; }; f"
  dm = diff --stat --summary -p MAIN...
  dr = "!f() { : git range-diff; git range-diff ${1:-MAIN} @{u} @; }; f"
  do = diff --stat --summary -p ORIG_HEAD
  km = "!f() { : git checkout; git checkout \"`git symbolic-ref --short ${1:-MAIN}`\"; }; f"
  mm = merge MAIN
  # Push the current ref to a Github branch URL, https://github.com/user/repo/tree/branch_name
  # "gh:" is my SSH host name alias for pushing to github.
  pgh = "!f() { : git push; R=${1%%/tree/*}; B=${2:-${1#*/tree/}}; git push \"gh:${R#https://github.com/}\" \"@:$B\"; }; f"

[grep]
  lineNumber = true
  fallbackToNoIndex = true

# vim: ft=gitconfig
